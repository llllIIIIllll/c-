
gst-launch-1.0 rtspsrc location="rtsp://192.168.1.21:554/live" latency=0 ! rtph264depay ! h264parse ! flvmux ! rtmpsink location="rtmp://112.19.241.133:1935/live/af live=1"


gst-launch-1.0   filesrc location="/home/nvidia/Desktop/SVID_20190523_100720_1.mp4" ! decodebin name=t   t. ! videoconvert ! omxh264enc ! queue ! flvmux name=mux   t. ! audioconvert ! voaacenc bitrate=128000 ! queue ! mux.   mux. ! rtmpsink location="rtmp://112.19.241.133:1935/live/af live=1"


gst-launch-1.0 -v v4l2src ! 'video/x-raw, width=640, height=480, framerate=30/1' ! queue ! videoconvert ! omxh264enc ! h264parse ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/af'


sudo gst-launch-1.0 rtspsrc location="rtsp://192.168.1.21:554/live" latency=0 drop-on-latency=1 ! rtph264depay ! h264parse ! omxh264dec ! tee name=t .t ! queue ! omxh264enc bitrate=2000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight200'  .t ! queue ! omxh264enc bitrate=10000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight1000'

sudo gst-launch-1.0 rtspsrc location="rtsp://192.168.1.21:554/live" latency=0 drop-on-latency=1 ! rtph264depay ! h264parse ! omxh264dec ! tee name=t  .t ! queue ! omxh264enc bitrate=2000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight200'  .t ! queue ! omxh264enc bitrate=10000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight1000'

sudo gst-launch-1.0 rtspsrc location="rtsp://192.168.1.21:554/live" latency=0 drop-on-latency=1 ! rtph264depay ! h264parse ! omxh264dec ! tee name=t  t. ! queue ! omxh264enc bitrate=2000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight200'  t. ! queue ! omxh264enc bitrate=10000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight1000'

sudo gst-launch-1.0 rtspsrc location="rtsp://192.168.1.21:554/live" latency=0 drop-on-latency=1 ! rtph264depay ! h264parse ! omxh264dec ! tee name=t  t. ! queue ! omxh264enc bitrate=2000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight200'  t. ! queue ! omxh264enc bitrate=10000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight1000'   t. ! queue ! omxh264enc bitrate=2500 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight'

sudo gst-launch-1.0 rtspsrc location="rtsp://192.168.1.21:554/live" latency=0 drop-on-latency=1 ! rtph264depay ! h264parse ! omxh264dec ! tee name=t  t. ! queue ! omxh264enc bitrate=10000000 ! flvmux ! rtmpsink location='rtmp://112.19.241.133/live/autoflight1000' 


sudo gst-launch-1.0 rtspsrc location="rtsp://admin:xijingkeji2020@192.168.1.64:554" latency=200 drop-on-latency=0 ! rtph264depay ! h264parse ! nvv4l2decoder ! nvvideoconvert ! nvvideo4linux2 bitrate=2000000  ! flvmux ! rtmpsink location='rtmp://192.168.66.140:8555/live'


docker run --gpus all --rm -it --privileged --network host -v /dev/:/dev/ harbor.qomolo.com/arm64/qeye bash

gst-launch-1.0 -v v4l2src device=/dev/video2 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! omxh264enc bitrate=1000000 ! flvmux ! rtmpsink location='rtmp://192.168.66.140:8555/live'

gst-launch-1.0 -v v4l2src device=/dev/video0 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! omxh264enc bitrate=4000000 ! flvmux ! rtmpsink location='rtmp://58.34.76.250:8555/cam0'

gst-launch-1.0 -v v4l2src device=/dev/video1 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! omxh264enc bitrate=5000000 ! flvmux ! rtmpsink location='rtmp://58.34.76.250:8555/cam1'


gst-launch-1.0 -v v4l2src device=/dev/video0 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! omxh264enc bitrate=1000000 ! flvmux ! rtmpsink location='rtmp://58.34.76.250:8555/camera/qtruck10/video0' &

gst-launch-1.0 -v v4l2src device=/dev/video1 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! omxh264enc bitrate=1000000 ! flvmux ! rtmpsink location='rtmp://58.34.76.250:8555/camera/qtruck10/video1' &

gst-launch-1.0 -v v4l2src device=/dev/video0 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! 'video/x-raw(memory:NVMM), width=(int)640, height=(int)480, format=(string)I420' ! nvv4l2h264enc  control-rate=0 bitrate=1000000  ! h264parse ! flvmux ! rtmpsink location='rtmp://58.34.76.250:8555/camera/qtruck10/video0' &


gst-launch-1.0 -v v4l2src device=/dev/video0 io-mode=2 ! 'video/x-raw,format=YUY2,width=1920,height=1080,framerate=30/1' ! nvvidconv ! 'video/x-raw(memory:NVMM), width=(int)640, height=(int)480, format=(string)I420' ! nvv4l2h264enc  bitrate=800000  ! h264parse ! flvmux ! rtmpsink location='rtmp://192.168.66.140:8555/camera/qtruck0/video0'

gst-launch-1.0 -v --gst-plugin-path=/opt/nvidia/qomolo/gst-plugins  nvv4l2camerasrc device=/dev/video1  ! nvvidconv ! 'video/x-raw(memory:NVMM), width=(int)640, height=(int)480, format=(string)I420' ! nvv4l2h264enc  bitrate=800000  ! h264parse ! flvmux ! rtmpsink location='rtmp://192.168.66.140:8555/camera/qtruck0/video1'


gst-launch-1.0 rtspsrc location="rtsp://192.168.66.140:8554/camera/qtruck0/video1" latency=0 drop-on-latency=1 ! rtph264depay ! h264parse ! decodebin ! xvimagesink 


gst-launch-1.0 rtspsrc location=rtsp://admin:passwd@192.168.2.71/Streaming/Channels/1 latency=300 ! rtph264depay ! h264parse ! nvv4l2decoder drop-frame-interval=1 ! nvvideoconvert ! video/x-raw,width=1080,height=720,formate=I420 ! queue !  nveglglessink window-x=0 window-y=0 window-width=1080 window-height=720

gst-launch-1.0 -e nvv4l2camerasrc device=/dev/video0 ! nvvidconv ! 'video/x-raw(memory:NVMM), width=1920, height=1080, format=I420, framerate=30/1' ! nvv4l2h264enc bitrate=10000000  ! filesink location=/debug/file.mkv

gst-launch-1.0 \
v4l2src device=/dev/video0  ! 'video/x-raw,width=640,height=480,framerate=30/1' ! autovideoconvert  \


gst-launch-1.0 --gst-plugin-path=/opt/qomolo/gst-plugins/plugins/ros2bridge/plugin/ \
rtspsrc location=rtsp://pass@192.168.10.71/axis-media/media.amp?camera=3 ! rtph264depay ! h264parse ! autovideoconvert !\
nvvidconv ! 'video/x-raw(memory:NVMM), width=960, height=540, format=RGBA, framerate=30/1' ! \
nvvidconv ! rosimagesink ros-name="gst_image_0" ros-topic="/test/camera_0"

#!/bin/bash

INPUT_NUMBER=$1

gst-launch-1.0 -v \
nvv4l2camerasrc device=/dev/video${INPUT_NUMBER} ! \
nvvidconv ! 'video/x-raw(memory:NVMM), width=1920, height=1536' ! \
nvvidconv ! nvv4l2h264enc bitrate=100000000 ! h264parse ! mpegtsmux ! filesink location=~/video${INPUT_NUMBER}.mp4


gst-launch-1.0 nvarguscamerasrc sensor_id=$1 ! 'video/x-raw(memory:NVMM),width=1920,height=1200,
format=NV12,framerate=30/1' ! nvvidconv ! fpsdisplaysink  sync=false video-sink=xvimagesink

gst-launch-1.0 compositor name=comp sink_1::xpos=1920 ! \
  nvvidconv ! nvv4l2h264enc bitrate=400000000 ! h264parse ! mpegtsmux ! filesink location=~/video_0_1.mp4 \
  nvarguscamerasrc sensor_id=0 ! 'video/x-raw(memory:NVMM),width=1920,height=1200, format=NV12,framerate=30/1' ! nvvidconv ! \
  queue2 ! comp. \
  nvarguscamerasrc sensor_id=1 ! 'video/x-raw(memory:NVMM),width=1920,height=1200, format=NV12,framerate=30/1' ! nvvidconv ! \
  queue2 ! comp.


gst-launch-1.0 videotestsrc ! videoconvert ! autovideosink

gst-launch-1.0 -e -v nvv4l2camerasrc device=/dev/video0 ! nvvidconv ! 'video/x-raw(memory:NVMM), width=1920, height=1080' !  nvvidconv ! fpsdisplaysink  sync=false video-sink=fakesink

gst-launch-1.0 -e -v nvv4l2camerasrc device=/dev/video1 ! nvvidconv ! 'video/x-raw(memory:NVMM), width=1920, height=1080' !  nvvidconv !  fpsdisplaysink  sync=false video-sink=fakesink





  nvbuf-memory-type   : Type of NvBufSurface Memory to be allocated for output buffers
                        flags: readable, writable, changeable only in NULL or READY state
                        Enum "GstNvBufMemoryType" Default: 0, "nvbuf-mem-default"
                           (0): nvbuf-mem-default - Default memory allocated, specific to particular platform
                           (1): nvbuf-mem-cuda-pinned - Allocate Pinned/Host cuda memory
                           (2): nvbuf-mem-cuda-device - Allocate Device cuda memory
                           (3): nvbuf-mem-cuda-unified - Allocate Unified cuda memory
                           (4): nvbuf-mem-surface-array - Allocate Surface Array memory, applicable for Jetson

  interpolation-method: Set interpolation methods
                        flags: readable, writable, controllable
                        Enum "GstNvInterpolationMethod" Default: 6, "Default"
                           (0): Nearest          - Nearest
                           (1): Bilinear         - Bilinear
                           (2): Algo-1           - GPU - Cubic, VIC - 5 Tap
                           (3): Algo-2           - GPU - Super, VIC - 10 Tap
                           (4): Algo-3           - GPU - LanzoS, VIC - Smart
                           (5): Algo-4           - GPU - Ignored, VIC - Nicest
                           (6): Default          - GPU - Nearest, VIC - Nearest
